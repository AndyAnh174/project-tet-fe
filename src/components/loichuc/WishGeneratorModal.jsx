import React, { useState } from 'react';
import { GoogleGenerativeAI } from "@google/generative-ai";

const genAI = new GoogleGenerativeAI("AIzaSyC6KA8KmAQJ8UaS5wCuUCGoNGsww59nwO0");

function WishGeneratorModal({ isOpen, onClose, onGenerated }) {
  const [recipient, setRecipient] = useState('');
  const [wishType, setWishType] = useState('');
  const [loading, setLoading] = useState(false);

  const generateWish = async () => {
    try {
      setLoading(true);
      const model = genAI.getGenerativeModel({ model: "gemini-pro" });

      const prompt = `Vi·∫øt m·ªôt l·ªùi ch√∫c T·∫øt ng·∫Øn g·ªçn, √Ω nghƒ©a v√† ch√¢n th√†nh cho ${recipient} v·ªÅ ${wishType}. 
        L·ªùi ch√∫c n√™n mang phong c√°ch truy·ªÅn th·ªëng Vi·ªát Nam, s·ª≠ d·ª•ng c√°c t·ª´ ng·ªØ trang tr·ªçng v√† mang t√≠nh ch·∫•t ng√†y T·∫øt.
        ƒê·ªô d√†i kho·∫£ng 3-4 c√¢u.`;

      const result = await model.generateContent(prompt);
      const response = await result.response;
      const text = response.text();
      
      onGenerated({
        title: `L·ªùi ch√∫c T·∫øt cho ${recipient}`,
        content: text
      });
      onClose();
    } catch (error) {
      console.error('Error generating wish:', error);
      alert('C√≥ l·ªói x·∫£y ra khi t·∫°o l·ªùi ch√∫c. Vui l√≤ng th·ª≠ l·∫°i.');
    } finally {
      setLoading(false);
    }
  };

  if (!isOpen) return null;

  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center p-4">
      <div className="bg-white rounded-xl max-w-md w-full p-6">
        <h3 className="text-xl font-bold text-red-800 mb-4">
        üß®T·∫°o l·ªùi ch√∫c t·ª± ƒë·ªông
        </h3>

        <div className="space-y-4">
          <div>
            <label className="block text-gray-700 mb-2">B·∫°n mu·ªën ch√∫c ai?</label>
            <input
              type="text"
              className="w-full px-4 py-2 rounded-lg border border-gray-300 focus:border-red-500 focus:ring-2 focus:ring-red-200"
              placeholder="VD: √¥ng b√†, b·ªë m·∫π, anh ch·ªã..."
              value={recipient}
              onChange={(e) => setRecipient(e.target.value)}
            />
          </div>

          <div>
            <label className="block text-gray-700 mb-2">Ch√∫c v·ªÅ ƒëi·ªÅu g√¨?</label>
            <input
              type="text"
              className="w-full px-4 py-2 rounded-lg border border-gray-300 focus:border-red-500 focus:ring-2 focus:ring-red-200"
              placeholder="VD: s·ª©c kh·ªèe, c√¥ng vi·ªác, h·ªçc t·∫≠p..."
              value={wishType}
              onChange={(e) => setWishType(e.target.value)}
            />
          </div>

          <div className="flex space-x-3 pt-4">
            <button
              onClick={generateWish}
              disabled={!recipient || !wishType || loading}
              className={`flex-1 bg-red-600 text-white py-2 px-4 rounded-lg ${
                loading || !recipient || !wishType
                  ? 'opacity-50 cursor-not-allowed'
                  : 'hover:bg-red-700'
              }`}
            >
              {loading ? 'ƒêang t·∫°o...' : '‚ú® T·∫°o l·ªùi ch√∫c'}
            </button>
            <button
              onClick={onClose}
              className="flex-1 bg-gray-200 text-gray-800 py-2 px-4 rounded-lg hover:bg-gray-300"
            >
              H·ªßy
            </button>
          </div>
        </div>
      </div>
    </div>
  );
}

export default WishGeneratorModal; 